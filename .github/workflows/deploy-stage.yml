name: Deploy Stage

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-stage-${{ github.ref }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}

jobs:
  deploy-admin-vercel:
    name: Deploy Admin to Vercel (Preview)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/admin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Env (Preview)
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Admin
        run: |
          yarn install --frozen-lockfile
          vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Preview)
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-api-ec2:
    name: Deploy API to EC2 (Staging/Prod Host)
    needs: deploy-admin-vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy repository to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: .
          target: ${{ secrets.EC2_PATH }}
          rm: true
          strip_components: 0

      - name: Run deploy script on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            cd ${{ secrets.EC2_PATH }}
            bash scripts/deployment/deploy-production-ec2-optimized.sh
